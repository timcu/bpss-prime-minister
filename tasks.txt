Challenge 1: Add a page for view_prime_ministers
    a. Create a template called list_minister.html which currently shows <h2>People who have held this ministry</h2>
    b. Create a function view_prime_ministers() which calls render_template("list_minister.html") with suitable title
    c. Add hyperlink to nav bar

Demo 2:
    a. Create a run configuration to init-db
    b. list all prime ministers in a table

Challenge 2: List all people in database in list_person.html
    a. Add sql to prime_minister.view_persons() function and pass results to render_template
    b. Create a table in list_person.html with a loop to repeat the rows

Challenge 3: Show list of recreations in view_person.html
    a. tbl_recreation has a foreign key 'id_person' which joins to tbl_person 'id'
    b. tbl_recreation has a varchar field 'vc_recreation' which contains the name of the recreation
    c. Add sql in prime_minister.view_person(id_person) to find the list of recreations
    d. Pass the list of recreations to render_template('view_person.html')
    e. Modify view_person.html to list any recreations

Challenge 4: Add functionality for view_deputy_prime_ministers
    a. Add hyperlink to nav bar "Deputy Prime Ministers"
    b. Create a function view_ministers(ministry=PRIME_MINISTER, page_title=None) called by
        view_prime_ministers() and view_deputy_prime_ministers()

Demo 5: Add a form to list_person.html so user can search on person's name

Challenge 5: Add authentication to application so users can log in.
    a. Table already exists in database
    b. Follow instructions in tutorial at http://flask.pocoo.org/docs/1.0/tutorial/views/
    c. Table is tbl_user with fields (id, vc_username, vc_password)
       Table in tutorial is user with fields (id, username, password)

Challenge 6: Keep search form populated after clicking search button

Challenge 7: Create files so that app can be packaged and installed
    a. See https://flask.palletsprojects.com/en/1.1.x/tutorial/install/
    b. Create setup.py
    c. Create MANIFEST.in
    d. pip install wheel
    e. python setup.py bdist_wheel
    f. pip install -e .

Challenge 8: In template view_person.html show marriages in Life between birth and death
	Examples view_person.html
	eg. "Married 1981 to Margie Aitken and had 3 children"
	If not actually married num_year_marriage will be None.
	eg. "Partnered with Tim Matheison and had 0 children"
	Modify function view_person(id_person) in __init__.py to pass marriages to template
	Use a union sql statement because we need to search id_person and id_person_partner.
	The following sql uses named bindings.
    sql = """select id, id_person, id_person_partner, num_children, num_year_marriage
            from tbl_marriage where id_person=:id_person
            union
            select id, id_person_partner, id_person, num_children, num_year_marriage
            from tbl_marriage where id_person_partner=:id_person
            order by num_year_marriage asc"""

Challenge 9: In view_person.html add a table of concurrent ministries under table of ministries.
	A concurrent ministry is one which was occurring at the same time as the person's ministry
	eg While John Howard was prime minister there were three deputy prime ministers
		Tim Fischer   Deputy from 11-Mar-1996 to 20-Jul-1999
		John Anderson Deputy from 20-Jul-1999 to 06-Jul-2005
		Mark Vaile    Deputy from 06-Jul-2005 to 03-Dec-2007
	Modify function view_person(id_person) in __init__.py
	Modify template view_person.html
	Pseudocode:
	For each ministry period find other people's ministries which had some overlap.
	Aggregate and remove duplicates from this list of ministries
	Show the other ministries in order of start date.
